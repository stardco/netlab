#!/bin/sh

## Global variables
PATH_INTERCO="/usr/local/etc/netlab"
FILE_INTERCO="${PATH_INTERCO}/interco.conf"
. ${FILE_INTERCO}

##########################
## Options parsing section
##########################

usage() {
        echo "netlab-interco -h | create | destroy | status"
        echo "create : creation operations"
        echo "destroy : deletion operations"
		echo "status : list the status of one or all the switches configured"
        echo "-h : print this message"
}

while getopts "h" opt
do
        case "$opt" in
                s) MYSWITCH=${OPTARG};;
                i) INTERFACE="1";;
                h) usage
                   exit 1;;
        esac
done
shift $(($OPTIND - 1))

####################
## Check functions
####################
exist_interco_switch()
{
  test=$(ifconfig $EXTERNAL_SWITCH1 2> /dev/null | grep $EXTERNAL_SWITCH1 | wc -l)
  return $test
}

exist_interco_ip4()
{
	if [ ! "$EXTERNAL_SWITCH1_IP4" = "" ]; then
		test=$(ifconfig 2> /dev/null | grep $EXTERNAL_SWITCH1_IP4 | wc -l)
	else
		test=0
	fi
	return $test
}

exist_interco_ip6()
{
	if [ ! "$EXTERNAL_SWITCH1_IP6" = "" ]; then
		test=$(ifconfig 2> /dev/null | grep $EXTERNAL_SWITCH1_IP6 | wc -l)
	else
		test=0
	fi
	return $test
}

exist_route_ip4()
{
	if [ ! "$LABS_IP4_RANGE" = "" ]; then
		test=$(netstat -4rn 2> /dev/null | grep $LABS_IP4_RANGE | wc -l)
	else
		test=0
	fi
	return $test
}

exist_route_ip6()
{
	if [ ! "$LABS_IP6_RANGE" = "" ]; then
		test=$(netstat -6rn 2> /dev/null | grep $LABS_IP6_RANGE | wc -l)
	else
		test=0
	fi
	return $test
}

###################
## Main functions
###################
status()
{
	echo "### Interconnexion information on host ###"
	exist_interco_switch
	if [ $? -eq 1 ]; then
		STATUS="ACTIVE"
	else
		STATUS="INACTIVE"
	fi
	echo "Bridge name : ${EXTERNAL_SWITCH1} : ${STATUS}"
	exist_interco_ip4
	if [ $? -eq 1 ]; then
		STATUS="ACTIVE"
	else
		STATUS="INACTIVE"
	fi
	echo "IPv4 address : ${EXTERNAL_SWITCH1_IP4} : ${STATUS}"
	exist_interco_ip6
	if [ $? -eq 1 ]; then
		STATUS="ACTIVE"
	else
		STATUS="INACTIVE"
	fi
	echo "IPv6 address : ${EXTERNAL_SWITCH1_IP6} : ${STATUS}"
	echo ""
	echo "### Traffic information ###"
	echo "NAT Active : ${OUTPUT_TRAFFIC_MANAGEMENT}"
	echo "NAT interface name : ${NAT_OUTPUT_INTERFACE}"
	echo ""
	echo "### Lab information ###"
	exist_route_ip4
	if [ $? -eq 0 ]; then
		STATUS="INACTIVE"
	else
		STATUS="ACTIVE"
		GATEWAY4=$(netstat -4rn | grep $LABS_IP4_RANGE | cut -f2 -w)
	fi
	echo "IPv4 range : ${LABS_IP4_RANGE} : $STATUS -> $GATEWAY4"
	exist_route_ip6
	if [ $? -eq 0 ]; then
		STATUS="INACTIVE"
	else
		STATUS="ACTIVE"
		GATEWAY6=$(netstat -6rn | grep $LABS_IP6_RANGE | cut -f2 -w)
	fi
	echo "IPv6 range : ${LABS_IP6_RANGE} : $STATUS -> $GATEWAY6"
	echo ""
	
}

create()
{
	#### Checks ####
	QUIT=0
	exist_interco_switch
	if [ $? -eq 1 ]; then
		echo "Switch already exists..."
		NO_SW=1
	fi
	if [ "${EXTERNAL_SWITCH1}" = "" ]; then
		echo "Switch undefined..."
		QUIT=1
	fi
	exist_interco_ip4
	if [ $? -eq 1 ]; then
		echo "IPv4 already affected..."
		QUIT=1
	fi
	if [ -z "${EXTERNAL_SWITCH1_IP4}" ] || [ -z "${EXTERNAL_SWITCH1_IP4_NETMASK}" ]; then
		echo "no IPv4 or IPv4 defined incorrectly..."
		NO_IP4=1
	fi
	exist_interco_ip6
	if [ $? -eq 1 ]; then
		echo "IPv6 already affected..."
		QUIT=1
	fi
	if [ -z "${EXTERNAL_SWITCH1_IP6}" ] || [ -z "${EXTERNAL_SWITCH1_IP6_NETMASK}" ]; then
		echo "no IPv6 or IPv6 defined incorrectly..."
		NO_IP6=1
	fi
	if [ $QUIT -eq 1 ]; then
		echo "Existing..."
		exit 1
	fi
	
	# Create bridge
	if [ -z "$NO_SW" ]; then
		ifconfig bridge create name ${EXTERNAL_SWITCH1} > /dev/null
    		ifconfig ${EXTERNAL_SWITCH1} up  > /dev/null
		echo "Bridge ${EXTERNAL_SWITCH1} created"
	fi
	
	# Affect IPv4
	if [ -z "$NO_IP4" ]; then
		ifconfig ${EXTERNAL_SWITCH1} inet ${EXTERNAL_SWITCH1_IP4} netmask ${EXTERNAL_SWITCH1_IP4_NETMASK}  > /dev/null
		echo "IPv4 affected"
		if [ -n "${LABS_IP4_RANGE}" ] && [ -n "${LABS_IP4_GATEWAY}" ]; then
			route -4 add -net ${LABS_IP4_RANGE} ${LABS_IP4_GATEWAY} > /dev/null
			echo "Route ${LABS_IP4_RANGE} configured"
		fi
	fi
	
	# Affect IPv6
	if [ -z "$NO_IP6" ]; then
		ifconfig ${EXTERNAL_SWITCH1} inet6 ${EXTERNAL_SWITCH1_IP6} prefixlen ${EXTERNAL_SWITCH1_IP6_NETMASK}  > /dev/null
		echo "IPv6 affected"
		if [ -n "${LABS_IP6_RANGE}" ] && [ -n "${LABS_IP6_GATEWAY}" ]; then
			route -6 add -net ${LABS_IP6_RANGE} ${LABS_IP6_GATEWAY} > /dev/null
			echo "Route ${LABS_IP6_RANGE} configured"
		fi
	fi
}

destroy()
{
	#### Checks ####
	QUIT=0
	exist_interco_switch
	if [ $? -eq 0 ]; then
		echo "Switch does not exist..."
		QUIT=1
	fi
	exist_interco_ip4
	if [ $? -eq 0 ]; then
		echo "IPv4 not affected..."
		NO_IP4=1
	fi
	exist_interco_ip6
	if [ $? -eq 0 ]; then
		echo "IPv6 not affected..."
		NO_IP6=1
	fi
	if [ $QUIT -eq 1 ]; then
		echo "Existing..."
		exit 1
	fi
	if [ ! $(ifconfig ${EXTERNAL_SWITCH1} | grep member | wc -l) -eq 0 ]; then
		echo "There are still members attached to the bridge ! Existing..."
		exit 1
	fi
	
	# Check if IP define
	#if [ -z "${EXTERNAL_SWITCH1_IP4}" ] || [ -z "${EXTERNAL_SWITCH1_IP4_NETMASK}" ]; then
	#	NO_IP4=1
	#fi
	#if [ -z "${EXTERNAL_SWITCH1_IP6}" ] || [ -z "${EXTERNAL_SWITCH1_IP6_NETMASK}" ]; then
	#	NO_IP6=1
	#fi
	
	# Delete IPv4
	if [ -z $NO_IP4 ]; then
		if [ -n "${LABS_IP4_RANGE}" ] && [ -n "${LABS_IP4_GATEWAY}" ]; then
			route -4 delete ${LABS_IP4_RANGE} ${LABS_IP4_GATEWAY} > /dev/null
			echo "Route ${LABS_IP4_RANGE} deleted"
		fi
		ifconfig ${EXTERNAL_SWITCH1} inet ${EXTERNAL_SWITCH1_IP4} netmask ${EXTERNAL_SWITCH1_IP4_NETMASK} delete  > /dev/null
		echo "IPv4 deleted"
	fi
	
	# Delete IPv6
	if [ -z $NO_IP6 ]; then
		if [ -n "${LABS_IP6_RANGE}" ] && [ -n "${LABS_IP6_GATEWAY}" ]; then
			route -6 delete ${LABS_IP6_RANGE} ${LABS_IP6_GATEWAY} > /dev/null
			echo "Route ${LABS_IP6_RANGE} deleted"
		fi
		ifconfig ${EXTERNAL_SWITCH1} inet6 ${EXTERNAL_SWITCH1_IP6} prefixlen ${EXTERNAL_SWITCH1_IP6_NETMASK} delete > /dev/null
		echo "IPv6 deleted"
	fi	

	# Delete Switch
	ifconfig ${EXTERNAL_SWITCH1} destroy > /dev/null
	echo "Bridge ${EXTERNAL_SWITCH1} destroyed..."
	
}

# Check create, delete or status paramaters
if [ ! "$1" = "-h" ] &&  [ ! "$1" = "create" ] &&  [ ! "$1" = "destroy" ] &&  [ ! "$1" = "status" ]; then
        usage
        exit 1
fi

$1 $MYSWITCH
