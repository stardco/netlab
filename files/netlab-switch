#!/bin/sh

## Global variables
PATH_SWITCHES="./switch"
FILE_SWITCHES="${PATH_SWITCHES}/switches.conf"
REALBRIDGE="rnb1"
REALBRIDGE_PORT="rnb1p1"
ADDRESS="10.0.0.1"
NETMASK="255.255.255.252"

##########################
## Options parsing section
##########################
while getopts "his:" opt
do
        case "$opt" in
                s) MYSWITCH=${OPTARG};;
                i) INTERFACE="1";;
                h) usage
                   exit 1;;
        esac
done
shift $(($OPTIND - 1))

usage() {
        echo "netlab-switch -h -i -s <switch> create | destroy | status"
        echo "-i : create the real bridge interface"
        echo "-s <switch> : create or delete only the switch in parameter"
        echo "create : creation operations"
        echo "destroy : deletion operations"
		echo "status : list the status of one or all the switches configured"
        echo "-h : print this message"
}

####################
## Check functions
####################
exist_switch()
{
  tstSwitch=$1
  numPort=$(ifconfig $tstSwitch 2> /dev/null | grep $tstSwitch | wc -l)
  return $numPort
}

exist_port()
{
  tstPort=$1
  test=$(ifconfig $tstPort 2> /dev/null | grep $tstPort | wc -l)
  return $test
}

check_switch_listed()
{
	LINE_SWITCH=$(grep "$1:" $FILE_SWITCHES)
	if [ -n "$LINE_SWITCH" ]; then
		return 0
	else
		return 1
	fi
}

check_switch_not_loaded()
{
	LOADED_SWITCH=$(ifconfig -g bridge | grep -x $1)
	if [ -z "$LOADED_SWITCH" ]; then
		return 0
	else
		return 1
	fi
}

####################################
## Link to the real world fucntion
####################################
real_bridge()
{
        echo Bridge to real world will be $1
        if [ "$1" = "created" ]; then
                exist_switch $REALBRIDGE
                if [ $? -eq 0 ]; then
                        echo Create switch $REALBRIDGE
                        ifconfig bridge create name $REALBRIDGE > /dev/null
                fi
                exist_port $REALBRIDGE_PORT
                if [ $? -eq 0 ]; then
                        echo Create port switch $REALBRIDGE_PORT
                        ifconfig tap create name $REALBRIDGE_PORT > /dev/null
                        ifconfig $REALBRIDGE addm $REALBRIDGE_PORT > /dev/null
                fi
                ifconfig ${REALBRIDGE} inet ${ADDRESS} netmask ${NETMASK}  > /dev/null
                ifconfig ${REALBRIDGE} up  > /dev/null
        fi
        if [ "$1" = "destroyed" ]; then
                exist_port $REALBRIDGE_PORT
                if [ $? -ne 0 ]; then
                        echo Destroy port switch $REALBRIDGE_PORT
                        ifconfig $REALBRIDGE_PORT destroy > /dev/null
                fi
                exist_switch $REALBRIDGE
                if [ $? -ne 0 ]; then
                        echo Destroy switch $REALBRIDGE
                        ifconfig $REALBRIDGE destroy > /dev/null
                fi
        fi
}

###################
## Main functions
###################
status()
{
	if [ -z "$1" ]; then
		LISTE_SWITCHES=$(grep -v -e "^#" $FILE_SWITCHES | cut -d ":" -f 1)
	else
		LISTE_SWITCHES=$1
		# check if machine is listed
		check_switch_listed $LISTE_SWITCHES
		if [ $? -eq 1 ]; then
			echo "Switch is not listed... Existing"
			exit 1
		fi
	fi
	echo "NAME:TYPE:NBR PORT:		status"
	for SWITCH in $LISTE_SWITCHES; do
		PARAMS_SWITCH=$(grep -v -e "^#" $FILE_SWITCHES | grep -w "$SWITCH")
		if [ -n "$(ifconfig -g bridge | grep "$SWITCH")" ]; then
			STATUS="loaded"
		else
			STATUS="not loaded"
		fi
		NBR_PORTS=$(ifconfig -g tap | grep -w $SWITCH | wc -l)
		if [ $NBR_PORTS -eq $(echo $PARAMS_SWITCH | cut -d ":" -f 3) ]; then
			STATUS="$STATUS and all port loaded"
		elif [ $NBR_PORTS -eq 0 ]; then
			STATUS="$STATUS and no port loaded"
		else
			STATUS="$STATUS and mistakes on number of ports loaded"
		fi
		echo "$PARAMS_SWITCH		$STATUS"
	done
}

create()
{
	if [ -z "$1" ]; then
		LISTE_SWITCHES=$(grep -v -e "^#" $FILE_SWITCHES | cut -d ":" -f 1)
	else
		LISTE_SWITCHES=$1
		# check if machine is listed
		check_switch_listed $LISTE_SWITCHES
		if [ $? -eq 1 ]; then
			echo "Switch is not listed... Existing"
			exit 1
		fi
	fi
	for SW in $LISTE_SWITCHES;
	do
		PARAMS_SWITCH=$(grep -v -e "^#" $FILE_SWITCHES | grep -w "$SW")
		exist_switch $SW
		if [ $? -eq 0 ]; then
			echo Create switch $SW
			ifconfig bridge create name $SW > /dev/null
		fi
		NBRPORT=$(echo $PARAMS_SWITCH | cut -d ":" -f 3)
		NUMPORT=1
		while [ $NUMPORT -le $NBRPORT ];
		do
			exist_port ${SW}p${NUMPORT}
			if [ $? -eq 0 ]; then
				echo Create port switch ${SW}p${NUMPORT}
				ifconfig tap create name ${SW}p${NUMPORT}  > /dev/null
				ifconfig ${SW} addm ${SW}p${NUMPORT}  > /dev/null
			fi
			NUMPORT=$(expr $NUMPORT + 1)
		done
		ifconfig ${SW} up  > /dev/null
	done
	if test -n "$INTERFACE"; then
		real_bridge created
	fi
}

destroy()
{
	if [ -z "$1" ]; then
		LISTE_SWITCHES=$(grep -v -e "^#" $FILE_SWITCHES | cut -d ":" -f 1)
	else
		LISTE_SWITCHES=$1
	fi
	for SW in $LISTE_SWITCHES; do
		# Delete port members of the switches
		exist_switch $SW
		if [ $? -ne 0 ]; then
			LISTE_PORT_SWITCH=$(ifconfig $SW | grep member | cut -d " " -f 2)
			for PORT in $LISTE_PORT_SWITCH;
			do
				echo Destroy port switch $PORT
				ifconfig $PORT destroy  > /dev/null
			done
			echo Destroy switch $SW
			ifconfig $SW destroy > /dev/null
		fi
		
		# Delete port which have the same switch name
		PARAM="^${SW}p[0-9]*\$"
		LISTE_PORTS=$(ifconfig -g tap | grep -E $PARAM)
		for PORT in $LISTE_PORTS;
		do
			echo Destroy port $PORT
			ifconfig $PORT destroy  > /dev/null
		done
	done
	if test -n "$INTERFACE"; then
		real_bridge destroyed
	fi
}

# Check create, delete or status paramaters
if ! [ "$1" = "create" ] && ! [ "$1" = "destroy" ] && ! [ "$1" = "status" ]; then
        usage
        exit 1
fi

$1 $MYSWITCH
